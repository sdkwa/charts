image:
  repository: ghcr.io/sdkwa
  tag: greenapi
  fronttag: greenapi
  pullPolicy: Always

services:
  targetPort: 3000

waconfig:
  resources: {}
    #requests:
    #  memory: "512M"
    #  cpu: "0.1"
    #limits:
    #  memory: "512M"
    #  cpu: "0.2"

apigateway:
  hpa:
    enabled: true
    cputhreshold: 50
    minpods: 1
    maxpods: 2
  replicaCount: 1
  resources:
    requests:
      memory: "256M"
      cpu: "0.20"
    limits:
      memory: "1024M"
      cpu: "1"

instanceservice:
  hpa:
    enabled: true
    cputhreshold: 50
    minpods: 1
    maxpods: 2
  replicaCount: 1
  resources: {}

userservice:
  replicaCount: 1
  resources: {}

waproducer:
  hpa:
    enabled: true
    cputhreshold: 50
    minpods: 1
    maxpods: 2
  replicaCount: 1
  resources: {}

wahttpqr:
  replicaCount: 1
  resources: {}

wamedia:
  hpa:
    enabled: true
    cputhreshold: 50
    minpods: 1
    maxpods: 2
  replicaCount: 1
  resources: {}

wahttpconsumer:
  replicaCount: 1
  resources: {}

warmingservice:
  replicaCount: 1
  resources: {}

webhooker:
  replicaCount: 1
  resources: {}

wacore:
  replicaCount: 1
  resources: {}

wafront:
  resources: {}

wafront-home:
  resources: {}

mysql:
  # not working
  #service.type: LoadBalancer
  nameOverride: mysql
  auth:
    existingSecret: sdkwa-secrets
    database: admin
  initdbScripts:
    createdb.sql: |-
      CREATE DATABASE IF NOT EXISTS `admin`;
      CREATE DATABASE IF NOT EXISTS `wbot-warming`;

rabbitmq:
  nameOverride: rabbitmq
  auth:
    username: admin
    existingPasswordSecret: sdkwa-secrets

mongodb:
  nameOverride: mongodb
  auth:
    rootUser: root
    rootPassword: admin
    usernames: 
      - root
    passwords:
      - admin
    databases: 
      - wadb